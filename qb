#!/bin/env bash
# author: iarom madden mail@iarom.org
# qutebrowser launcher


# init ########################################


[ -n "$1" ] && { cmd="$1" ; shift 1; }


_init() {
    qute_bin="/usr/bin/qutebrowser"
    qb_version='3.2.1'
    proto_version=1
    args=()
    args_startup=() 
    #soc_ipc="$(echo ${XDG_RUNTIME_DIR}/qutebrowser/*)"
    soc_ipc="${XDG_RUNTIME_DIR}/qutebrowser/ipc-$(echo -n "$USER" | md5sum | cut -d' ' -f1)"
    cac_dir=""
    cfg_fil=""
    cac_dir_x="/home/$USER/.cache/qutebrowserx"
    cac_dir_m="/home/$USER/.cache/qutebrowserm"
    config_x="$HOME/.config/qutebrowser/cfx.py"
    config_m="$HOME/.config/qutebrowser/cfm.py"
}

_qq_ini_qt() {
  args_startup+=( '--qt-flag' 'ignore-gpu-blacklist' )
  args_startup+=( '--qt-flag' 'enable-gpu-rasterisation' )
  args_startup+=( '--qt-flag' 'enable-native-gpu-memory-buffers' )
  args_startup+=( '--qt-flag' 'num-raster-threads=4' )
  args_startup+=( '--qt-flag' 'enable-accelerated-video-decode' )
  args_startup+=( '--qt-flag' 'enable-features=VaapiVideoDecoder' )
  args_startup+=( '--qt-flag' 'enable-features=WebGPU' )
  args_startup+=( '--qt-flag' 'use-gl=desktop' )
  args_startup+=( '--qt-flag' 'enable-oop-rasterization' )
  args_startup+=( '--qt-flag' 'enable-raw-draw' ) ;}

_ini_profile() { # set up on new system
    /usr/share/qutebrowser/scripts/dictcli.py install en-GB
    ln -s $HOME/.local/share/qutebrowser/qtwebengine_dictionaries $HOME/.cache/qutebrowserx/data/
    ln -s $HOME/.local/share/qutebrowser/qtwebengine_dictionaries $HOME/.cache/qutebrowserm/data/
}

# main #########################################

# factoring here was to make clear the structure of multiple layers of piping

_qute_str() { "$qute_bin" "${args_startup[@]}" & }

_qute_cmd() { # order of items matters; highly unstable to format innacuracies
    printf '{"args": ["%s"], "target_arg": null, "version": "%s", "protocol_version": %d, "cwd": "%s"}\n' \
       "${args}" \
       "${qb_version}" \
       "${proto_version}" \
       "${PWD}" | socat -lf /dev/null - UNIX-CONNECT:"${soc_ipc}" || _qute_str &
}

# primary instance ###################################

_qa() {
    [ -n "${@}" ] && args+=(":open -t ${@}") || args+=(":open -w")

    # TODO: modify qute_bin?
    args_startup+=( "${@}" )

    _qute_cmd & }

_qab() { # open url in new window
    args+=(":open -w ${@}")
    args_startup+=( "${@}" )
    _qute_cmd & }


# non-default profiles / instances ################################


_set_socket() { soc_ipc="$(echo ${cac_dir}/runtime/*)" ;}

_qq_ini() {

    args_startup+=( "--basedir"          "$cac_dir" )
    args_startup+=( "--config-py"        "$cfg_fil" )

    _set_socket;}


# profile x #######################################

_qx() {
    [ -n "${@}" ] && args+=(":open -t $@") || args+=(":open -w")
    cac_dir="${cac_dir_x}"
    cfg_fil="${config_x}"

    _qq_ini
    _qute_cmd;}


# profile: mutt / mail #############################

_qm() {
    [ "${@}" ] \
        && args+=( ":tab-select 0/1 ;; open ${@}" ) \
        || args+=( ":open -w" )
    #args_startup+=( ":open ${@}" ) 
    args_startup+=( '--override-restore' )

    cac_dir="${cac_dir_m}"
    cfg_fil="${config_m}"

    _qq_ini
    _qute_cmd;}


# main ####################################

_main() {

    _init

    case $cmd in
        # profile a
        w|win)            target="window"   && _qa "${@}" ;;
        t|tab)            target="tab"      && _qa "${@}" ;;
        c|cmd)            _qa "${@}" ;;
        f|win.float)      _qa_float "${@}" ;; # TODO: refer to bottom
        # profile x
        xw|xwin|x)        target="window"   && _qx ${@} ;; # dup of 'x'
        xt|xtab)          target="tab"      && _qx ${@} ;;
        xc|xcmd)          _qx ${@} ;;
        # profile m
        mw|mwin)          target="window"   && _qm ${@} ;;
        mt|mtab)          target="window"   && _qm ${@} ;;
        mc|qmutt|m)       _qm ${@} ;;
        # web apps # TODO: add these to eg shell aliases or i3x
        w.gpt|gpt)        target="window"   && _qab "chat.openai.com" ;;
        w.wa|wa|whatsapp) target="window"   && _qab "web.whatsapp.com" ;;
        #w.xx) 	          w_xx ;;
        # default / catch-all
        *)                _qa "${cmd}" "${@}" ;;
    esac }


_main ${@}


