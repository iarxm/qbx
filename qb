#!/bin/bash
# AUTHOR: IAROM MADDEN think@iarom.org
# qutebrowser launcher


# init ########################################


[ -n "$1" ] && { cmd="$1" ; shift 1; } || { cmd="$def" ; }


_init() {

  cac_dir_x="/home/$USER/.cache/qutebrowserx"
  cac_dir_m="/home/$USER/.cache/qutebrowserm"
  config_a="$HOME/.config/qutebrowser/configa.py"
  config_b="$HOME/.config/qutebrowser/configb.py"
  qute_bin="/usr/bin/qutebrowser"
  qb_version='1.0.4'
  proto_version=1
  args=()
  args_startup=() ;}


# main #########################################


_qute_prn() {
  
  printf \
    '{"args": ["%s"], "target_arg": "%s", "version": "%s", "protocol_version": %d, "cwd": "%s"}\n' \
		  "${args[@]}" \
			"${target}" \
		  "${qb_version}" "${proto_version}" "${PWD}"; }


_qute_soc() { _qute_prn | socat -lf /dev/null - UNIX-CONNECT:${soc_ipc} ; }

_qute_cmd() { _qute_soc || "$qute_bin" "${args_startup[@]}" & }


# primary instance ###################################


_qa_ini_qt() {

  args_startup+=( '--qt-flag' 'ignore-gpu-blacklist' )
  args_startup+=( '--qt-flag' 'enable-gpu-rasterisation' )
  args_startup+=( '--qt-flag' 'enable-native-gpu-memory-buffers' )
  args_startup+=( '--qt-flag' 'num-raster-threads=4' )
  args_startup+=( '--qt-flag' 'enable-accelerated-video-decode' )
  args_startup+=( '--qt-flag' 'enable-features=VaapiVideoDecoder' )
  args_startup+=( '--qt-flag' 'enable-features=WebGPU' )
  args_startup+=( '--qt-flag' 'use-gl=desktop' )
  args_startup+=( '--qt-flag' 'enable-oop-rasterization' )
  args_startup+=( '--qt-flag' 'enable-raw-draw' ) ;}
  

_qa_init() {
    
    [ -n "${@}" ] && args+=("${@}") || args+=("")
    [ -n $args ]  && args+=("")

    args_startup+=( "${@}" )
    soc_ipc="$(echo {XDG_RUNTIME_DIR}/qutebrowser/*)" ;}
  

_qa() {

  _qa_init ${@}
	_qute_cmd & }


# secondary instances ################################

_set_socket() { soc_ipc="$(echo ${cac_dir}/runtime/*)" ;}

_qx_ini() {
  [ "$@" ] && args+=("$@") && [ -n "$args" ] || args+=(":open -w")
  cac_dir="${cac_dir_x}"
  _set_socket
	args_startup+=( '--basedir'   "$cac_dir" )
  args_startup+=( '--config-py' "$config_b" ) ;}

_qx() {
  _qx_ini ${@}
  _qute_cmd; }


# profile: mutt ##################################


_qm() {

  #cac_dir="/home/$USER/.cache/qutebrowser_mail"
  #cac_dir="/home/$USER/.cache/qutebrowser_mail"
  args_startup+=( "--basedir"          "$cac_dir" )
  args_startup+=( "--config-py"        "$config_a" )
  args_startup+=( '--override-restore' )
  _set_socket

  [ "${@}" ] \
    && args+=( ":tab-select 0/1 ;; open ${@}" ) \
    || args+=( ":open -w" )
  args_startup+=( ":open ${@}" ) 

  _qute_cmd;}


# main ####################################

_main() {

  _init
  case $cmd in
    w|win)             target="window" 	&& _qa "${@}" ;;
    t|tab) 			       target="tab" 		  && _qa "${@}" ;;
    c|cmd) 			       _qa "${@}" ;;
    wf|win.float)	     _qa_float "${@}" ;; # TODO: refer to bottom
    # secondaries
    x)                 target="window"   && _qx ${@} ;;
    xw|xwin)           target="window"   && _qx ${@} ;; # dup of 'x'
    xt|xtab)           target="tab"      && _qx ${@} ;;
    xc|xcmd)           _qx ${@} ;;
    m|qmutt)           _qm ${@} ;;
    # web apps
    w.xx) 			       w_xx ;;
    w.wa|wa|whatsapp)  q_whatsapp ;;
    w.gpt|gpt)         target="window"  && _qa "chat.openai.com" ;;
    # workspaces
    w.soc) 			       url_soc_b; 	_qx_win "${@}" ;;
    w.oo) 			       url_oo; 		q_win "${@}" ;;
    w.oo.wins) 	       url_oo;			q_wins "${@}" ;;
    w.cm)				       url_cm_a;		_qx_win "${@}" ;;
    w.cm.ml) 		       url_cm_a; url_soc_a; _qx_win "${@}";;
    
    *)                 target="window"   && _qa "$cmd" "${@}" ;;
  esac }


_main ${@}

